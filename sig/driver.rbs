module River
  interface _Driver
    def advisory_lock: (Integer) -> void
    def job_get_by_kind_and_unique_properties: (Driver::JobGetByKindAndUniquePropertiesParam) -> JobRow?
    def job_insert: (Driver::JobInsertParams) -> JobRow
    def job_insert_many: (Array[Driver::JobInsertParams]) -> Integer
    def transaction: [T] () { () -> T } -> T
  end

  module Driver
    class JobGetByKindAndUniquePropertiesParam
      attr_accessor created_at: [Time, Time]?
      attr_accessor encoded_args: String?
      attr_accessor kind: String
      attr_accessor queue: String?
      attr_accessor state: Array[jobStateAll]?

      def initialize: (kind: String, ?created_at: [Time, Time]?, ?encoded_args: String?, ?queue: String?, ?state: Array[jobStateAll]?) -> void
    end

    class JobInsertParams
      attr_accessor encoded_args: String
      attr_accessor kind: String
      attr_accessor max_attempts: Integer
      attr_accessor priority: Integer
      attr_accessor queue: String
      attr_accessor scheduled_at: Time?
      attr_accessor state: jobStateAll
      attr_accessor tags: Array[String]?

      def initialize: (encoded_args: String, kind: String, max_attempts: Integer, priority: Integer, queue: String, scheduled_at: Time?, state: jobStateAll, tags: Array[String]?) -> void
    end
  end
end
